# Simplest possible approach
FROM gradle:8.4-jdk17-alpine AS builder

WORKDIR /app

# Copy source files
COPY rct-backend/ ./

# Ensure gradle wrapper is executable and clean any existing build
RUN chmod +x gradlew || true
RUN rm -rf build/ .gradle/ || true

# Build using the gradle image's gradle command with verbose output
RUN gradle clean bootJar --no-daemon --stacktrace --info

# Debug: List the build directory contents and find JAR
RUN ls -la build/libs/ || echo "No build/libs directory found"
RUN find build/libs/ -name "*.jar" -type f || echo "No JAR files found"

# Runtime stage
FROM eclipse-temurin:17-jre-alpine

WORKDIR /app

# Copy the built JAR (use wildcard to handle any JAR name)
COPY --from=builder /app/build/libs/*.jar app.jar

# Verify JAR was copied
RUN ls -la app.jar && echo "JAR copied successfully" || echo "JAR copy failed"

# Expose port
EXPOSE 8080

# Run the application with debug info
ENTRYPOINT ["sh", "-c", "echo 'PORT env var:' $PORT && echo 'Starting on port:' ${PORT:-8080} && java -Dspring.profiles.active=railway -Dserver.port=${PORT:-8080} -Dserver.address=0.0.0.0 -jar app.jar"]