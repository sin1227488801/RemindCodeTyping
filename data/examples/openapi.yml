openapi: 3.0.3
info:
  title: RCT Backend API
  description: Remind Code Typing - 学習支援型タイピングアプリケーションのバックエンドAPI
  version: 1.0.0
  contact:
    name: RCT Development Team
    email: dev@rct.example.com

servers:
  - url: http://localhost:8080
    description: ローカル開発環境
  - url: https://your-app.azurewebsites.net
    description: Azure本番環境

paths:
  /api/auth/register:
    post:
      tags:
        - 認証
      summary: 新規登録
      description: 新しいユーザーアカウントを作成します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: バリデーションエラー

  /api/auth/login:
    post:
      tags:
        - 認証
      summary: ログイン
      description: ユーザーログインを行います
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: ログイン失敗

  /api/auth/demo:
    post:
      tags:
        - 認証
      summary: デモログイン
      description: デモユーザーでログインします（未ログインでも利用可能）
      responses:
        '200':
          description: デモログイン成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /api/studybooks:
    get:
      tags:
        - 学習帳
      summary: 学習帳一覧取得
      description: 条件に基づいて学習帳の一覧を取得します
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: language
          in: query
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageStudyBookResponse'

    post:
      tags:
        - 学習帳
      summary: 学習帳作成
      description: 新しい学習項目を作成します
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyBookRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyBookResponse'

  /api/studybooks/{id}:
    put:
      tags:
        - 学習帳
      summary: 学習帳更新
      description: 既存の学習項目を更新します
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyBookRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyBookResponse'

    delete:
      tags:
        - 学習帳
      summary: 学習帳削除
      description: 学習項目を削除します
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: 削除成功

  /api/studybooks/random:
    get:
      tags:
        - 学習帳
      summary: ランダム問題取得
      description: ランダムに学習項目を取得します（タイピング練習用）
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: language
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudyBookResponse'

  /api/typing/logs:
    post:
      tags:
        - タイピング
      summary: タイピング結果記録
      description: タイピング練習の結果を記録します
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypingLogRequest'
      responses:
        '201':
          description: 記録成功

  /api/typing/stats:
    get:
      tags:
        - タイピング
      summary: 統計情報取得
      description: ユーザーのタイピング統計情報を取得します
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'

components:
  schemas:
    AuthRequest:
      type: object
      required:
        - loginId
        - password
      properties:
        loginId:
          type: string
          minLength: 4
          maxLength: 50
          example: "testuser"
        password:
          type: string
          minLength: 8
          maxLength: 100
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]+$'
          example: "TestPass123!"

    AuthResponse:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        loginId:
          type: string
        token:
          type: string
        isDemo:
          type: boolean

    StudyBookRequest:
      type: object
      required:
        - language
        - question
      properties:
        language:
          type: string
          maxLength: 20
          example: "Java"
        question:
          type: string
          maxLength: 5000
          example: "public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}"
        explanation:
          type: string
          maxLength: 5000
          example: "Javaの基本的なHello Worldプログラムです。"

    StudyBookResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        language:
          type: string
        question:
          type: string
        explanation:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    PageStudyBookResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/StudyBookResponse'
        totalElements:
          type: integer
        totalPages:
          type: integer
        size:
          type: integer
        number:
          type: integer

    TypingLogRequest:
      type: object
      required:
        - studyBookId
        - startedAt
        - durationMs
        - totalChars
        - correctChars
      properties:
        studyBookId:
          type: string
          format: uuid
        startedAt:
          type: string
          format: date-time
        durationMs:
          type: integer
          minimum: 1
          example: 45000
        totalChars:
          type: integer
          minimum: 0
          example: 150
        correctChars:
          type: integer
          minimum: 0
          example: 142

    StatsResponse:
      type: object
      properties:
        totalAttempts:
          type: integer
        averageAccuracy:
          type: number
          format: decimal
        bestAccuracy:
          type: number
          format: decimal
        totalCharsTyped:
          type: integer
        totalTimeMs:
          type: integer
        currentLoginStreak:
          type: integer
        maxLoginStreak:
          type: integer
        totalLoginDays:
          type: integer